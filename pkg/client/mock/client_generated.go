// Code generated by MockGen. DO NOT EDIT.
// Source: ./client.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	models "github.com/IBM-Cloud/power-go-client/power/models"
	core "github.com/IBM/go-sdk-core/v5/core"
	resourcecontrollerv2 "github.com/IBM/platform-services-go-sdk/resourcecontrollerv2"
	vpcv1 "github.com/IBM/vpc-go-sdk/vpcv1"
	gomock "github.com/golang/mock/gomock"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// CreateInstance mocks base method.
func (m *MockClient) CreateInstance(createParams *models.PVMInstanceCreate) (*models.PVMInstanceList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInstance", createParams)
	ret0, _ := ret[0].(*models.PVMInstanceList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInstance indicates an expected call of CreateInstance.
func (mr *MockClientMockRecorder) CreateInstance(createParams interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInstance", reflect.TypeOf((*MockClient)(nil).CreateInstance), createParams)
}

// CreateLoadBalancerPoolMember mocks base method.
func (m *MockClient) CreateLoadBalancerPoolMember(arg0 *vpcv1.CreateLoadBalancerPoolMemberOptions) (*vpcv1.LoadBalancerPoolMember, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLoadBalancerPoolMember", arg0)
	ret0, _ := ret[0].(*vpcv1.LoadBalancerPoolMember)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateLoadBalancerPoolMember indicates an expected call of CreateLoadBalancerPoolMember.
func (mr *MockClientMockRecorder) CreateLoadBalancerPoolMember(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLoadBalancerPoolMember", reflect.TypeOf((*MockClient)(nil).CreateLoadBalancerPoolMember), arg0)
}

// DeleteInstance mocks base method.
func (m *MockClient) DeleteInstance(id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInstance", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInstance indicates an expected call of DeleteInstance.
func (mr *MockClientMockRecorder) DeleteInstance(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInstance", reflect.TypeOf((*MockClient)(nil).DeleteInstance), id)
}

// DeleteLoadBalancerPoolMember mocks base method.
func (m *MockClient) DeleteLoadBalancerPoolMember(options *vpcv1.DeleteLoadBalancerPoolMemberOptions) (*core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLoadBalancerPoolMember", options)
	ret0, _ := ret[0].(*core.DetailedResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteLoadBalancerPoolMember indicates an expected call of DeleteLoadBalancerPoolMember.
func (mr *MockClientMockRecorder) DeleteLoadBalancerPoolMember(options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLoadBalancerPoolMember", reflect.TypeOf((*MockClient)(nil).DeleteLoadBalancerPoolMember), options)
}

// GetCloudServiceInstanceByName mocks base method.
func (m *MockClient) GetCloudServiceInstanceByName(name string) (*resourcecontrollerv2.ResourceInstance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCloudServiceInstanceByName", name)
	ret0, _ := ret[0].(*resourcecontrollerv2.ResourceInstance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCloudServiceInstanceByName indicates an expected call of GetCloudServiceInstanceByName.
func (mr *MockClientMockRecorder) GetCloudServiceInstanceByName(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCloudServiceInstanceByName", reflect.TypeOf((*MockClient)(nil).GetCloudServiceInstanceByName), name)
}

// GetCloudServiceInstances mocks base method.
func (m *MockClient) GetCloudServiceInstances() ([]resourcecontrollerv2.ResourceInstance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCloudServiceInstances")
	ret0, _ := ret[0].([]resourcecontrollerv2.ResourceInstance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCloudServiceInstances indicates an expected call of GetCloudServiceInstances.
func (mr *MockClientMockRecorder) GetCloudServiceInstances() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCloudServiceInstances", reflect.TypeOf((*MockClient)(nil).GetCloudServiceInstances))
}

// GetDHCPServerByID mocks base method.
func (m *MockClient) GetDHCPServerByID(id string) (*models.DHCPServerDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDHCPServerByID", id)
	ret0, _ := ret[0].(*models.DHCPServerDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDHCPServerByID indicates an expected call of GetDHCPServerByID.
func (mr *MockClientMockRecorder) GetDHCPServerByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDHCPServerByID", reflect.TypeOf((*MockClient)(nil).GetDHCPServerByID), id)
}

// GetDHCPServers mocks base method.
func (m *MockClient) GetDHCPServers() (models.DHCPServers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDHCPServers")
	ret0, _ := ret[0].(models.DHCPServers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDHCPServers indicates an expected call of GetDHCPServers.
func (mr *MockClientMockRecorder) GetDHCPServers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDHCPServers", reflect.TypeOf((*MockClient)(nil).GetDHCPServers))
}

// GetImages mocks base method.
func (m *MockClient) GetImages() (*models.Images, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetImages")
	ret0, _ := ret[0].(*models.Images)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetImages indicates an expected call of GetImages.
func (mr *MockClientMockRecorder) GetImages() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetImages", reflect.TypeOf((*MockClient)(nil).GetImages))
}

// GetInstance mocks base method.
func (m *MockClient) GetInstance(id string) (*models.PVMInstance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstance", id)
	ret0, _ := ret[0].(*models.PVMInstance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstance indicates an expected call of GetInstance.
func (mr *MockClientMockRecorder) GetInstance(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstance", reflect.TypeOf((*MockClient)(nil).GetInstance), id)
}

// GetInstanceByName mocks base method.
func (m *MockClient) GetInstanceByName(name string) (*models.PVMInstance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceByName", name)
	ret0, _ := ret[0].(*models.PVMInstance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstanceByName indicates an expected call of GetInstanceByName.
func (mr *MockClientMockRecorder) GetInstanceByName(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceByName", reflect.TypeOf((*MockClient)(nil).GetInstanceByName), name)
}

// GetInstances mocks base method.
func (m *MockClient) GetInstances() (*models.PVMInstances, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstances")
	ret0, _ := ret[0].(*models.PVMInstances)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstances indicates an expected call of GetInstances.
func (mr *MockClientMockRecorder) GetInstances() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstances", reflect.TypeOf((*MockClient)(nil).GetInstances))
}

// GetLoadBalancer mocks base method.
func (m *MockClient) GetLoadBalancer(arg0 *vpcv1.GetLoadBalancerOptions) (*vpcv1.LoadBalancer, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoadBalancer", arg0)
	ret0, _ := ret[0].(*vpcv1.LoadBalancer)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetLoadBalancer indicates an expected call of GetLoadBalancer.
func (mr *MockClientMockRecorder) GetLoadBalancer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoadBalancer", reflect.TypeOf((*MockClient)(nil).GetLoadBalancer), arg0)
}

// GetNetworks mocks base method.
func (m *MockClient) GetNetworks() (*models.Networks, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworks")
	ret0, _ := ret[0].(*models.Networks)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworks indicates an expected call of GetNetworks.
func (mr *MockClientMockRecorder) GetNetworks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworks", reflect.TypeOf((*MockClient)(nil).GetNetworks))
}

// GetRegion mocks base method.
func (m *MockClient) GetRegion() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRegion")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRegion indicates an expected call of GetRegion.
func (mr *MockClientMockRecorder) GetRegion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRegion", reflect.TypeOf((*MockClient)(nil).GetRegion))
}

// GetZone mocks base method.
func (m *MockClient) GetZone() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetZone")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetZone indicates an expected call of GetZone.
func (mr *MockClientMockRecorder) GetZone() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetZone", reflect.TypeOf((*MockClient)(nil).GetZone))
}

// ListLoadBalancerPoolMembers mocks base method.
func (m *MockClient) ListLoadBalancerPoolMembers(arg0 *vpcv1.ListLoadBalancerPoolMembersOptions) (*vpcv1.LoadBalancerPoolMemberCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLoadBalancerPoolMembers", arg0)
	ret0, _ := ret[0].(*vpcv1.LoadBalancerPoolMemberCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListLoadBalancerPoolMembers indicates an expected call of ListLoadBalancerPoolMembers.
func (mr *MockClientMockRecorder) ListLoadBalancerPoolMembers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLoadBalancerPoolMembers", reflect.TypeOf((*MockClient)(nil).ListLoadBalancerPoolMembers), arg0)
}

// ListLoadBalancers mocks base method.
func (m *MockClient) ListLoadBalancers(arg0 *vpcv1.ListLoadBalancersOptions) (*vpcv1.LoadBalancerCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLoadBalancers", arg0)
	ret0, _ := ret[0].(*vpcv1.LoadBalancerCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListLoadBalancers indicates an expected call of ListLoadBalancers.
func (mr *MockClientMockRecorder) ListLoadBalancers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLoadBalancers", reflect.TypeOf((*MockClient)(nil).ListLoadBalancers), arg0)
}
